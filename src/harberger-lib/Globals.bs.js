// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as Belt from "bs-platform/lib/es6/belt.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as Belt_Option from "bs-platform/lib/es6/belt_Option.js";
import * as Caml_format from "bs-platform/lib/es6/caml_format.js";
import * as Caml_option from "bs-platform/lib/es6/caml_option.js";
import * as Async$WildCards from "./Async.bs.js";

function $pipe$plus$pipe(a, b) {
  return a.add(b);
}

function $pipe$star$pipe(a, b) {
  return a.mul(b);
}

function $pipe$neg$pipe(a, b) {
  return a.sub(b);
}

function $pipe$slash$pipe(a, b) {
  return a.div(b);
}

function $pipe$eq$eq$pipe(a, b) {
  return a.eq(b);
}

function $pipe$less$pipe(a, b) {
  return a.lt(b);
}

function $pipe$great$pipe(a, b) {
  return a.gt(b);
}

function toFixedWithPrecisionNoTrailingZeros(number, digits) {
  return String(Caml_format.caml_float_of_string(number.toFixed(digits)));
}

function restr(prim) {
  return prim;
}

function reactMapWithDefault(opt, $$default, f) {
  if (opt !== undefined) {
    return Curry._1(f, Caml_option.valFromOption(opt));
  } else {
    return $$default;
  }
}

function reactMap(opt, f) {
  return reactMapWithDefault(opt, null, f);
}

var Opt = {
  let_: Belt_Option.flatMap
};

var Id = Belt.Id;

var $$Array = Belt.$$Array;

var SortArray = Belt.SortArray;

var MutableQueue = Belt.MutableQueue;

var MutableStack = Belt.MutableStack;

var List = Belt.List;

var $$Range = Belt.$$Range;

var $$Set = Belt.$$Set;

var $$Map = Belt.$$Map;

var MutableSet = Belt.MutableSet;

var MutableMap = Belt.MutableMap;

var HashSet = Belt.HashSet;

var HashMap = Belt.HashMap;

var $$Option = Belt.$$Option;

var Result = Belt.Result;

var Int = Belt.Int;

var Float = Belt.Float;

var let_ = Async$WildCards.let_;

var mapAsync = Async$WildCards.mapAsync;

var async = Async$WildCards.async;

var catchAsync = Async$WildCards.catchAsync;

var asyncFromResult = Async$WildCards.asyncFromResult;

var attemptMapAsync = Async$WildCards.attemptMapAsync;

var oMap = Belt_Option.map;

var $less$$great = Belt_Option.map;

var oFlatMap = Belt_Option.flatMap;

var $great$great$eq = Belt_Option.flatMap;

var mapd = Belt_Option.mapWithDefault;

var $pipe$pipe$pipe$pipe = Belt_Option.getWithDefault;

export {
  Id ,
  $$Array ,
  SortArray ,
  MutableQueue ,
  MutableStack ,
  List ,
  $$Range ,
  $$Set ,
  $$Map ,
  MutableSet ,
  MutableMap ,
  HashSet ,
  HashMap ,
  $$Option ,
  Result ,
  Int ,
  Float ,
  let_ ,
  mapAsync ,
  async ,
  catchAsync ,
  asyncFromResult ,
  attemptMapAsync ,
  oMap ,
  $less$$great ,
  oFlatMap ,
  $great$great$eq ,
  mapd ,
  $pipe$pipe$pipe$pipe ,
  $pipe$plus$pipe ,
  $pipe$star$pipe ,
  $pipe$neg$pipe ,
  $pipe$slash$pipe ,
  $pipe$eq$eq$pipe ,
  $pipe$less$pipe ,
  $pipe$great$pipe ,
  toFixedWithPrecisionNoTrailingZeros ,
  restr ,
  reactMapWithDefault ,
  reactMap ,
  Opt ,
  
}
/* Async-WildCards Not a pure module */
