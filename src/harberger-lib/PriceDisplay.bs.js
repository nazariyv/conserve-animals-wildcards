// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as React from "react";
import * as RimbleUi from "rimble-ui";
import * as Belt_Float from "bs-platform/lib/es6/belt_Float.js";
import * as Styles$WildCards from "./Styles.bs.js";
import * as Globals$WildCards from "./Globals.bs.js";
import * as QlHooks$WildCards from "./QlHooks.bs.js";
import * as Web3Utils$WildCards from "./Web3Utils.bs.js";
import * as UsdPriceProvider$WildCards from "./components/UsdPriceProvider.bs.js";

function usePrice(animal) {
  var optPriceWei = QlHooks$WildCards.usePrice(animal);
  var optCurrentUsdEthPrice = UsdPriceProvider$WildCards.useUsdPrice(undefined);
  if (typeof optPriceWei === "number") {
    if (optPriceWei !== 0) {
      return ;
    } else {
      return /* tuple */[
              "0",
              "0"
            ];
    }
  }
  var totalPatronageEth = Web3Utils$WildCards.fromWeiToEth(optPriceWei[0].toString());
  var optTotaPatronageUsd = Globals$WildCards.oFlatMap(optCurrentUsdEthPrice, (function (currentUsdEthPrice) {
          return Globals$WildCards.toFixedWithPrecisionNoTrailingZeros(Globals$WildCards.mapd(Belt_Float.fromString(totalPatronageEth), 0, (function (a) {
                            return a;
                          })) * currentUsdEthPrice, 2);
        }));
  return /* tuple */[
          totalPatronageEth,
          optTotaPatronageUsd
        ];
}

function PriceDisplay(Props) {
  var animal = Props.animal;
  var optCurrentPrice = usePrice(animal);
  if (optCurrentPrice === undefined) {
    return React.createElement(RimbleUi.Loader, { });
  }
  var optPriceUsd = optCurrentPrice[1];
  return React.createElement(React.Fragment, {
              children: null
            }, React.createElement("p", {
                  className: Styles$WildCards.noMarginTop + (" " + Styles$WildCards.noMarginBottom)
                }, Globals$WildCards.restr(optCurrentPrice[0] + " ETH")), optPriceUsd !== undefined ? React.createElement("p", {
                    className: Styles$WildCards.noMarginTop
                  }, React.createElement("small", undefined, Globals$WildCards.restr("(" + (optPriceUsd + " USD)")))) : null);
}

var make = PriceDisplay;

export {
  usePrice ,
  make ,
  
}
/* react Not a pure module */
